<Window x:Class="WinAudioAssistant.Views.DevicePriorityView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WinAudioAssistant"
        xmlns:viewmodels="clr-namespace:WinAudioAssistant.ViewModels"
        xmlns:converters="clr-namespace:WinAudioAssistant.Converters"
        xmlns:gwdd="urn:gong-wpf-dragdrop"
        mc:Ignorable="d"
        Title="DevicePriorityView" Width="{Binding WindowWidth, Mode=TwoWay}" Height="{Binding WindowHeight, Mode=TwoWay}"
        Closing="Window_Closing">
    <Window.DataContext>
        <viewmodels:DevicePriorityViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/ImageResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:BooleanToGridLengthStarConverter x:Key="BooleanToGridLengthStarConverter"/>
            <ContextMenu x:Key="PriorityListBoxContextMenu">
                <MenuItem Header="Add device" Command="{Binding AddDeviceCommand}">
                    <MenuItem.Icon>
                        <StaticResource ResourceKey="Add_Image"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Edit device" Command="{Binding EditDeviceCommand}">
                    <MenuItem.Icon>
                        <StaticResource ResourceKey="Edit_Image"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Remove device" Command="{Binding RemoveDeviceCommand}">
                    <MenuItem.Icon>
                        <StaticResource ResourceKey="Remove_Image"/>
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>
        </ResourceDictionary>
    </Window.Resources>
    <Grid x:Name="MainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="{Binding SeparateCommsPriority, Converter={StaticResource BooleanToGridLengthStarConverter}}"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

        <!-- Column 1: Output -->
        <TextBlock Grid.Column="1" Grid.Row="1" x:Name="OutputPriorityTextBlock"
                   Text="Output device priority" FontSize="18" FontWeight="Bold"/>
        <ListBox Grid.Column="1" Grid.Row="2" x:Name="OutputPriorityListBox"
                 gwdd:DragDrop.IsDragSource="True" gwdd:DragDrop.IsDropTarget="True"
                 gwdd:DragDrop.UseDefaultDragAdorner="True" gwdd:DragDrop.UseDefaultEffectDataTemplate="True"
                 gwdd:DragDrop.DragHandler="{Binding}" gwdd:DragDrop.DropHandler="{Binding}"
                 ItemsSource="{Binding OutputDevices}" ContextMenu="{StaticResource PriorityListBoxContextMenu}"
                 ContextMenuOpening="PriorityListBox_ContextMenuOpening"
                 SelectionChanged="PriorityListBox_SelectionChanged" MouseDown="PriorityListBox_MouseDown">
            <ListBox.Resources>
                <Style TargetType="ListBoxItem">
                    <EventSetter Event="MouseDoubleClick" Handler="PriorityListBoxItem_MouseDoubleClick"/>
                </Style>
            </ListBox.Resources>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name}"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <TextBlock Grid.Column="1" Grid.Row="3" x:Name="CommsOutputPriorityTextBlock"
                   Text="Comms output priority" FontSize="18" FontWeight="Bold"
                   Visibility="{Binding SeparateCommsPriority, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <ListBox Grid.Column="1" Grid.Row="4" x:Name="CommsOutputPriorityListBox"
                 Visibility="{Binding SeparateCommsPriority, Converter={StaticResource BooleanToVisibilityConverter}}"
                 gwdd:DragDrop.IsDragSource="True" gwdd:DragDrop.IsDropTarget="True"
                 gwdd:DragDrop.UseDefaultDragAdorner="True" gwdd:DragDrop.UseDefaultEffectDataTemplate="True"
                 gwdd:DragDrop.DragHandler="{Binding}" gwdd:DragDrop.DropHandler="{Binding}"
                 ItemsSource="{Binding CommsOutputDevices}" ContextMenu="{StaticResource PriorityListBoxContextMenu}"
                 ContextMenuOpening="PriorityListBox_ContextMenuOpening"
                 SelectionChanged="PriorityListBox_SelectionChanged" MouseDown="PriorityListBox_MouseDown">
            <ListBox.Resources>
                <Style TargetType="ListBoxItem">
                    <EventSetter Event="MouseDoubleClick" Handler="PriorityListBoxItem_MouseDoubleClick"/>
                </Style>
            </ListBox.Resources>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name}"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <!-- Column 3: Input -->
        <TextBlock Grid.Column="3" Grid.Row="1" x:Name="InputPriorityTextBlock"
                   Text="Input device priority" FontSize="18" FontWeight="Bold"/>
        <ListBox Grid.Column="3" Grid.Row="2" x:Name="InputPriorityListBox"
                 gwdd:DragDrop.IsDragSource="True" gwdd:DragDrop.IsDropTarget="True"
                 gwdd:DragDrop.UseDefaultDragAdorner="True" gwdd:DragDrop.UseDefaultEffectDataTemplate="True"
                 gwdd:DragDrop.DragHandler="{Binding}" gwdd:DragDrop.DropHandler="{Binding}"
                 ItemsSource="{Binding InputDevices}" ContextMenu="{StaticResource PriorityListBoxContextMenu}"
                 ContextMenuOpening="PriorityListBox_ContextMenuOpening"
                 SelectionChanged="PriorityListBox_SelectionChanged" MouseDown="PriorityListBox_MouseDown">
            <ListBox.Resources>
                <Style TargetType="ListBoxItem">
                    <EventSetter Event="MouseDoubleClick" Handler="PriorityListBoxItem_MouseDoubleClick"/>
                </Style>
            </ListBox.Resources>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name}"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <TextBlock Grid.Column="3" Grid.Row="3" x:Name="CommsInputPriorityTextBlock"
                   Text="Comms input priority" FontSize="18" FontWeight="Bold"
                   Visibility="{Binding SeparateCommsPriority, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <ListBox Grid.Column="3" Grid.Row="4" x:Name="CommsInputPriorityListBox"
                 Visibility="{Binding SeparateCommsPriority, Converter={StaticResource BooleanToVisibilityConverter}}"
                 gwdd:DragDrop.IsDragSource="True" gwdd:DragDrop.IsDropTarget="True"
                 gwdd:DragDrop.UseDefaultDragAdorner="True" gwdd:DragDrop.UseDefaultEffectDataTemplate="True"
                 gwdd:DragDrop.DragHandler="{Binding}" gwdd:DragDrop.DropHandler="{Binding}"
                 ItemsSource="{Binding CommsInputDevices}" ContextMenu="{StaticResource PriorityListBoxContextMenu}"
                 ContextMenuOpening="PriorityListBox_ContextMenuOpening"
                 SelectionChanged="PriorityListBox_SelectionChanged" MouseDown="PriorityListBox_MouseDown">
            <ListBox.Resources>
                <Style TargetType="ListBoxItem">
                    <EventSetter Event="MouseDoubleClick" Handler="PriorityListBoxItem_MouseDoubleClick"/>
                </Style>
            </ListBox.Resources>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name}"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <CheckBox Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="5" x:Name="SeparateCommsPriorityCheckBox"
                  Content="Separate priorities for communications devices" FontSize="14"
                  IsChecked="{Binding SeparateCommsPriority, Mode=TwoWay}"
                  Checked="SeparateCommsPriorityCheckBox_Checked" Unchecked="SeparateCommsPriorityCheckBox_Unchecked"/>
 
        <!-- Buttons -->
        <StackPanel Grid.Column="1" Grid.ColumnSpan="3"  Grid.Row="6" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5,10,5,0">
            <Button Content="OK" Width="75" Margin="10,0,0,0" Command="{Binding OkCommand}" ToolTip="Saves changes and closes the dialog."/>
            <Button Content="Cancel" Width="75" Margin="10,0,0,0" Command="{Binding CancelCommand}" ToolTip="Closes the dialog without saving changes."/>
            <Button Content="Apply" Width="75" Margin="10,0,0,0" Command="{Binding ApplyCommand}" ToolTip="Saves changes without closing the dialog."/>
        </StackPanel>
    </Grid>
</Window>
