<views:BaseView x:Class="WinAudioAssistant.Views.EditDeviceView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WinAudioAssistant.Views"
        xmlns:views="clr-namespace:WinAudioAssistant.Views"
        xmlns:viewmodels="clr-namespace:WinAudioAssistant.ViewModels"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}" Height="Auto" Width="350" MinWidth="350" SizeToContent="Height" LayoutUpdated="Window_LayoutUpdated"
        Closing="Window_Closing">
    <Window.DataContext>
        <viewmodels:EditDeviceViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/ImageResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    <Grid x:Name="MainGrid" Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Row 0: Name field -->
        <Grid Grid.Row="0" Margin="5" ToolTip="Set a custom name for this managed device.">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0"  Grid.Row="0" Text="Name:" Margin="0,0,5,0"/>
            <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding ManagedDeviceName}" Width="Auto" />
        </Grid>

        <!-- Row 1: Audio endpoint selection -->
        <Border Grid.Row ="1" BorderBrush="Gray" BorderThickness="1" CornerRadius="3">
            <StackPanel>
                <TextBlock Grid.Column="0" Text="Audio endpoint device:" Margin="5,0,5,5" VerticalAlignment="Bottom"/>
                <ComboBox Margin="5,0,5,5" ToolTip="Select an audio endpoint to bind to this managed device."
                          ItemsSource="{Binding FilteredEndpoints}" SelectedItem="{Binding ManagedDeviceEndpointInfo}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Image Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Margin="0,0,5,0"
                                       Source="{Binding IconBitmap_32px}"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Device_DeviceDesc}"/>
                                <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding DeviceInterface_FriendlyName}"/>
                            </Grid>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <ToolTip>
                                        <StackPanel>
                                            <TextBlock><Run FontWeight="Bold" Text="DataFlow: "/><Run Text="{Binding DataFlow, Mode=OneWay}"/></TextBlock>
                                            <TextBlock><Run FontWeight="Bold" Text="AudioEndpoint_GUID: "/><Run Text="{Binding AudioEndpoint_GUID, Mode=OneWay}"/></TextBlock>
                                            <TextBlock><Run FontWeight="Bold" Text="DeviceState: "/><Run Text="{Binding DeviceState, Mode=OneWay}"/></TextBlock>
                                            <TextBlock><Run FontWeight="Bold" Text="AudioEndpoint_FormFactor: "/><Run Text="{Binding AudioEndpoint_FormFactor, Mode=OneWay}"/></TextBlock>
                                            <TextBlock><Run FontWeight="Bold" Text="AudioEndpoint_JackSubType: "/><Run Text="{Binding AudioEndpoint_JackSubType, Mode=OneWay}"/></TextBlock>
                                            <TextBlock><Run FontWeight="Bold" Text="Device_ContainerId: "/><Run Text="{Binding Device_ContainerId, Mode=OneWay}"/></TextBlock>
                                            <TextBlock><Run FontWeight="Bold" Text="Device_DeviceDesc: "/><Run Text="{Binding Device_DeviceDesc, Mode=OneWay}"/></TextBlock>
                                            <TextBlock><Run FontWeight="Bold" Text="DeviceClass_IconPath: "/><Run Text="{Binding DeviceClass_IconPath, Mode=OneWay}"/></TextBlock>
                                            <TextBlock><Run FontWeight="Bold" Text="DeviceInterface_FriendlyName: "/><Run Text="{Binding DeviceInterface_FriendlyName, Mode=OneWay}"/></TextBlock>
                                            <TextBlock><Run FontWeight="Bold" Text="HostDeviceDesc: "/><Run Text="{Binding HostDeviceDesc, Mode=OneWay}"/></TextBlock>
                                        </StackPanel>
                                    </ToolTip>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
                <WrapPanel Margin="5,0,5,0">
                    <CheckBox Grid.Column="0" Content="Active" Margin="0,0,5,5" ToolTip="Include endpoints that are fully connected and enabled."
                              IsChecked="{Binding EndpointListFilter[Active]}"/>
                    <CheckBox Grid.Column="1" Content="Unplugged" Margin="0,0,5,5" ToolTip="Include endpoints that are present and enabled, but reporting that the jack is unplugged."
                              IsChecked="{Binding EndpointListFilter[Unplugged]}"/>
                    <CheckBox Grid.Column="2" Content="Disabled" Margin="0,0,5,5" ToolTip="Include endpoints that are present, but disabled in the control panel."
                              IsChecked="{Binding EndpointListFilter[Disabled]}"/>
                    <CheckBox Grid.Column="3" Content="Missing" Margin="0,0,0,5" ToolTip="Include endpoints that are not currently present, but have been in the past."
                              IsChecked="{Binding EndpointListFilter[NotPresent]}"/>
                </WrapPanel>
            </StackPanel>
        </Border>
        
        <!-- Row 2: Endpoint identification method -->
        <Border Grid.Row="2" Margin="0,5,0,0" BorderBrush="Gray" BorderThickness="1" CornerRadius="3">
            <StackPanel>
                <Grid Margin="5" ToolTip="Select the method used to identify this audio endpoint. This gives you control over how WinAudioAssistant tries to match a Managed Device with an actual physical audio device.">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Margin="0,0,5,0"
                               Text="Endpoint identification method:" VerticalAlignment="Center"/>
                    <ComboBox Grid.Column="1" ItemsSource="{Binding ManagedDeviceIdentificationMethods}" SelectedItem="{Binding ManagedDeviceIdentificationMethod}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>
                </Grid>
                <WrapPanel Grid.Row="1" Grid.Column="0" Margin="5,0,5,0"
                           Visibility="{Binding ShowCustomIdentificationFlags, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <CheckBox Content="Host device name" Margin="0,0,5,5" IsChecked="{Binding ManagedDeviceCustomIdentificationFlags[HostDeviceDesc]}"
                              ToolTip="b3f8fa53-0004-438e-9003-51a46e139bfc[6]&#x0a;(Property name unknown)&#x0a;&#x0a;Appears to be the name of the host device. Usually same as DeviceInterface_FriendlyName, but won't add numbers if there are duplicates."/>
                    <CheckBox Content="Jack type" Margin="0,0,5,5" IsChecked="{Binding ManagedDeviceCustomIdentificationFlags[AudioEndpoint_FormFactor]}"
                              ToolTip="AudioEndpoint_FormFactor&#x0a;&#x0a;Speakers, headphones, headset, SPDIF, etc."/>
                    <CheckBox Content="Jack sub type" Margin="0,0,5,5" IsChecked="{Binding ManagedDeviceCustomIdentificationFlags[AudioEndpoint_JackSubType]}"
                              ToolTip="AudioEndpoint_JackSubType&#x0a;&#x0a;Contains a GUID for a type of jack, which can be more specific than Jack type"/>
                    <CheckBox Content="Endpoint name" Margin="0,0,5,5" IsChecked="{Binding ManagedDeviceCustomIdentificationFlags[Device_DeviceDesc]}"
                              ToolTip="Device_DeviceDesc&#x0a;&#x0a;The endpoint's name, which can be changed in Windows Settings."/>
                    <CheckBox Content="Interface name" Margin="0,0,5,5" IsChecked="{Binding ManagedDeviceCustomIdentificationFlags[DeviceInterface_FriendlyName]}"
                              ToolTip="DeviceInterface_FriendlyName&#x0a;&#x0a;The device description specified by the driver."/>
                    <CheckBox Content="ContainerID" Margin="0,0,5,5" IsChecked="{Binding ManagedDeviceCustomIdentificationFlags[Device_ContainerId]}"
                              ToolTip="Device_ContainerId&#x0a;&#x0a;Possibly points to parent device? Not populated for virtual devices."/>
                </WrapPanel>
            </StackPanel>
        </Border>
        
        <!-- Row 3: Activation conditions -->
        <Border Grid.Row="3" Margin="0,5,0,0" BorderBrush="Gray" BorderThickness="1" CornerRadius="3">
            <StackPanel>
                <Grid Margin="5" ToolTip="Optionally create a set of conditions that must be met for this managed device to be active. All listed conditions must be met.">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Margin="0,0,5,0"
                               Text="Activation conditions:" VerticalAlignment="Center"/>
                    <Button Grid.Column="2" Margin="5,0,0,0" Command="{Binding AddApplicationConditionCommand}" ToolTip="Add a condition that a specific application or process must be running.">
                        <Image Source="{Binding ApplicationConditionIcon}"/>
                    </Button>
                    <Button Grid.Column="3" Margin="5,0,0,0" Command="{Binding RemoveActivationConditionCommand}" ToolTip="Remove the currently selected activation condition.">
                        <StaticResource ResourceKey="Remove_Image"/>
                    </Button>
                </Grid>
                <DataGrid AutoGenerateColumns="False" Height="100" IsReadOnly="True"
                          ItemsSource="{Binding ActivationConditions}" SelectedItem="{Binding SelectedActivationCondition}">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Type">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding TypeIcon}" Width="16" Height="16"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Path" Binding="{Binding Path}"/>
                    </DataGrid.Columns>
                    <DataGrid.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding RemoveActivationConditionCommand}"/>
                    </DataGrid.InputBindings>
                </DataGrid>
            </StackPanel>
        </Border>

        <!-- Buttons -->
        <StackPanel Grid.Row="6" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
            <Button Content="OK" Width="75" Margin="10,0,0,0" Command="{Binding OkCommand}" IsDefault="True" ToolTip="Saves changes and closes the dialog."/>
            <Button Content="Cancel" Width="75" Margin="10,0,0,0" Command="{Binding CancelCommand}" IsCancel="True" ToolTip="Closes the dialog without saving changes."/>
            <Button Content="Apply" Width="75" Margin="10,0,0,0" Command="{Binding ApplyCommand}" ToolTip="Saves changes without closing the dialog."/>
        </StackPanel>
    </Grid>
</views:BaseView>
